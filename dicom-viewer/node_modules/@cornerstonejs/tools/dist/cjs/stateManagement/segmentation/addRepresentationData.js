"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const segmentationState_1 = require("./segmentationState");
const SegmentationRepresentations_1 = __importDefault(require("../../enums/SegmentationRepresentations"));
function addRepresentationData({ segmentationId, type, data, }) {
    const segmentation = (0, segmentationState_1.getSegmentation)(segmentationId);
    if (segmentation.representationData[type]) {
        console.warn(`Representation data of type ${type} already exists for segmentation ${segmentationId}, overwriting it.`);
    }
    switch (type) {
        case SegmentationRepresentations_1.default.Labelmap:
            if (data) {
                segmentation.representationData[type] =
                    data;
            }
            break;
        case SegmentationRepresentations_1.default.Contour:
            if (data) {
                segmentation.representationData[type] = data;
            }
            break;
        case SegmentationRepresentations_1.default.Surface:
            if (data) {
                segmentation.representationData[type] = data;
            }
            break;
        default:
            throw new Error(`Invalid representation type ${type}`);
    }
}
exports.default = addRepresentationData;
//# sourceMappingURL=addRepresentationData.js.map