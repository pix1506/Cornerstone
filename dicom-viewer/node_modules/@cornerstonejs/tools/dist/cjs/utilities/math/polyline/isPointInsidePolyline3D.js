"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isPointInsidePolyline3D = void 0;
const containsPoint_1 = __importDefault(require("./containsPoint"));
const projectTo2D_1 = require("./projectTo2D");
function isPointInsidePolyline3D(point, polyline, options = {}) {
    const { sharedDimensionIndex, projectedPolyline } = (0, projectTo2D_1.projectTo2D)(polyline);
    const { holes } = options;
    const projectedHoles = [];
    if (holes) {
        for (let i = 0; i < holes.length; i++) {
            const hole = holes[i];
            const hole2D = [];
            for (let j = 0; j < hole.length; j++) {
                hole2D.push([
                    hole[j][(sharedDimensionIndex + 1) % 3],
                    hole[j][(sharedDimensionIndex + 2) % 3],
                ]);
            }
            projectedHoles.push(hole2D);
        }
    }
    const point2D = [
        point[(sharedDimensionIndex + 1) % 3],
        point[(sharedDimensionIndex + 2) % 3],
    ];
    return (0, containsPoint_1.default)(projectedPolyline, point2D, { holes: projectedHoles });
}
exports.isPointInsidePolyline3D = isPointInsidePolyline3D;
//# sourceMappingURL=isPointInsidePolyline3D.js.map